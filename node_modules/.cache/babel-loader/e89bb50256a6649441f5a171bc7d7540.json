{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/steindorsnorrason/Desktop/kksearchwindow/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport DisplayContent from './DisplayContent';\nimport { useDispatch, useSelector } from 'react-redux'; //import {resultList} from '../actions/searchActions'\n//import { Col } from 'react-bootstrap'\n\nconst Search = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const listResult = useSelector(state => state.listResult);\n  const {\n    items\n  } = listResult;\n  const [title, setTitle] = useState('');\n  /*useEffect(() => {\n      dispatch(resultList(title))\n      }, [dispatch])\n   if(items && items.data && items.data.items){\n      console.log(items.data.items)\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Myndaleit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"searchWords\",\n      id: \"keywords\",\n      placeholder: \"leitaror\\xF0\",\n      onClick: event => setTitle(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), title && /*#__PURE__*/_jsxDEV(DisplayContent, {\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Search, \"ui1Fx30LeK44ttOk7t1GVt+C0VM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/steindorsnorrason/Desktop/kksearchwindow/src/components/Search.js"],"names":["React","useState","useEffect","DisplayContent","useDispatch","useSelector","Search","dispatch","listResult","state","items","title","setTitle","event","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC,C,CACA;AACA;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,UAAU,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAYF,UAAlB;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEA;AACJ;AACA;AACA;AACA;AACA;;AAEI,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,IAAI,EAAC,aAAjD;AAA+D,MAAA,EAAE,EAAC,UAAlE;AAA6E,MAAA,WAAW,EAAC,cAAzF;AAAqG,MAAA,OAAO,EAAEY,KAAK,IAAID,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA/H;AAAA;AAAA;AAAA;AAAA,YAFJ,EAICJ,KAAK,iBACF,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAUE,CAxBN;;GAAML,M;UACeF,W,EACEC,W;;;KAFjBC,M;AA0BN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect }  from 'react'\nimport DisplayContent from './DisplayContent'\nimport {useDispatch, useSelector} from 'react-redux'\n//import {resultList} from '../actions/searchActions'\n//import { Col } from 'react-bootstrap'\n\nconst Search = () => {\n    const dispatch = useDispatch()\n    const listResult = useSelector(state => state.listResult)\n    const { items } = listResult\n\n    const [title, setTitle] = useState('')\n\n    /*useEffect(() => {\n        dispatch(resultList(title))\n        }, [dispatch])\n\n    if(items && items.data && items.data.items){\n        console.log(items.data.items)\n    }*/\n    return (\n        <>\n        <h1>Myndaleit</h1>\n            <input type=\"text\" className=\"form-control\" name=\"searchWords\" id=\"keywords\" placeholder=\"leitarorÃ°\" onClick={event => setTitle(event.target.value)}/>\n        \n        {title && (\n            <DisplayContent title={title}/>\n        )\n        }\n        </>\n    )}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}