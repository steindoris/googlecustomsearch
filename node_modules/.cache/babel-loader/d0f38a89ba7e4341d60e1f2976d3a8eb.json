{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/steindorsnorrason/Desktop/kksearchwindow/src/components/DisplayContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Result from './Result';\nimport Loader from './Loader';\nimport Message from './Message';\nimport { resultList } from '../actions/searchActions';\n\nconst DisplayContent = title => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(resultList(title));\n  }, [dispatch]);\n  const listResult = useSelector(state => state.listResult);\n  const {\n    loading,\n    error,\n    items\n  } = listResult;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 14,\n        md: 8,\n        lg: 6,\n        xl: 4,\n        children: /*#__PURE__*/_jsxDEV(Result, {\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(DisplayContent, \"QlGhw8Lammxghdukwj8yf6/3Ptg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DisplayContent;\nexport default DisplayContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayContent\");","map":{"version":3,"sources":["/Users/steindorsnorrason/Desktop/kksearchwindow/src/components/DisplayContent.js"],"names":["React","useState","useEffect","Row","Col","Container","useDispatch","useSelector","Result","Loader","Message","resultList","DisplayContent","title","dispatch","listResult","state","loading","error","items","map","item","_id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,iBAApC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,QAAQ,CAACH,UAAU,CAACE,KAAD,CAAX,CAAR;AACH,GAFQ,EAEN,CAACC,QAAD,CAFM,CAAT;AAIF,QAAMC,UAAU,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA4BJ,UAAlC;AAIA,sBACI;AAAA,cAEEE,OAAO,gBACH,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADG,GAECC,KAAK,gBAAG,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAH,gBACT,QAAC,GAAD;AAAA,gBACKC,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACP,QAAC,GAAD;AAAoB,QAAA,EAAE,EAAE,EAAxB;AAA4B,QAAA,EAAE,EAAE,CAAhC;AAAmC,QAAA,EAAE,EAAE,CAAvC;AAA0C,QAAA,EAAE,EAAE,CAA9C;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AALN,mBADJ;AAgBD,CA5BD;;GAAMV,c;UAEeN,W,EAKAC,W;;;KAPfK,c;AA8BN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Row, Col, Container } from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Result from './Result'\nimport Loader from './Loader'\nimport Message from './Message'\nimport {resultList} from '../actions/searchActions'\n\nconst DisplayContent = (title) => {\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(resultList(title))\n    }, [dispatch])\n\n  const listResult = useSelector(state => state.listResult)\n  const { loading, error, items } = listResult\n\n  \n    \n  return ( \n      <>\n    {\n        loading ? (\n            <Loader />\n            ) : error ? <Message variant='danger'>{error}</Message> : \n            <Row>\n                {items.map((item) => (\n                    <Col key={item._id} sm={14} md={8} lg={6} xl={4}>\n                        <Result item={item} />\n                    </Col>    \n                ))}\n            </Row>\n    }\n  </>\n  )\n}\n\nexport default DisplayContent\n"]},"metadata":{},"sourceType":"module"}