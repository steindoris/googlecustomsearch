{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { listResultReducer, productDetailsReducer } from './reducers/searchReducers';\nconst rootReducer = combineReducers({\n  listResult: listResultReducer //productDetails: productDetailsReducer,\n  //cart: cartReducer,\n  //userLogin: userLoginReducer,\n\n}); //const cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse (localStorage.getItem('cartItems')) : []\n//const userInfoFromStorage = localStorage.getItem('userInfo') \n//? JSON.parse (localStorage.getItem('userInfo')) \n//: null\n\nconst initialState = {//cart: { cartItems: cartItemsFromStorage },\n  //userLogin: { userInfo: userInfoFromStorage } \n}; //const middleware = [thunk]\n//const store = createStore(reducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/steindorsnorrason/Desktop/kksearchwindow/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","listResultReducer","productDetailsReducer","rootReducer","listResult","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,iBAAR,EAA2BC,qBAA3B,QAAuD,2BAAvD;AAGA,MAAMC,WAAW,GAAGN,eAAe,CAAC;AAChCO,EAAAA,UAAU,EAAEH,iBADoB,CAEhC;AACA;AACA;;AAJgC,CAAD,CAAnC,C,CAOA;AAEA;AACA;AACA;;AAEA,MAAMI,YAAY,GAAG,CACjB;AACA;AAFiB,CAArB,C,CAKA;AAEA;;AACA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CC,OAAxE;AAEA,MAAMC,KAAK,GAAGd,WAAW,CACvBO,WADuB,EAEvBG,gBAAgB,CAACR,eAAe,CAACC,KAAD,CAAhB,CAFO,CAAzB;AAKA,eAAeW,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {listResultReducer, productDetailsReducer} from './reducers/searchReducers'\n\n\nconst rootReducer = combineReducers({\n    listResult: listResultReducer,\n    //productDetails: productDetailsReducer,\n    //cart: cartReducer,\n    //userLogin: userLoginReducer,\n})\n\n//const cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse (localStorage.getItem('cartItems')) : []\n\n//const userInfoFromStorage = localStorage.getItem('userInfo') \n//? JSON.parse (localStorage.getItem('userInfo')) \n//: null\n\nconst initialState = {\n    //cart: { cartItems: cartItemsFromStorage },\n    //userLogin: { userInfo: userInfoFromStorage } \n}\n\n//const middleware = [thunk]\n\n//const store = createStore(reducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store"]},"metadata":{},"sourceType":"module"}