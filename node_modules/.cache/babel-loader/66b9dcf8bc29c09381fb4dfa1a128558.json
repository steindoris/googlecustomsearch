{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { listResultReducer, productDetailsReducer } from './reducers/searchReducers';\nimport { cartReducer } from './reducers/cartReducer';\nimport { userLoginReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  listResult: listResultReducer //productDetails: productDetailsReducer,\n  //cart: cartReducer,\n  //userLogin: userLoginReducer,\n\n}); //const cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse (localStorage.getItem('cartItems')) : []\n//const userInfoFromStorage = localStorage.getItem('userInfo') \n//? JSON.parse (localStorage.getItem('userInfo')) \n//: null\n\nconst initialState = {//cart: { cartItems: cartItemsFromStorage },\n  //userLogin: { userInfo: userInfoFromStorage } \n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default store;","map":{"version":3,"sources":["/Users/steindorsnorrason/Desktop/kksearchwindow/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","listResultReducer","productDetailsReducer","cartReducer","userLoginReducer","reducer","listResult","initialState","middleware","store","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,iBAAR,EAA2BC,qBAA3B,QAAuD,2BAAvD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC5BS,EAAAA,UAAU,EAAEL,iBADgB,CAE5B;AACA;AACA;;AAJ4B,CAAD,CAA/B,C,CAOA;AAEA;AACA;AACA;;AAEA,MAAMM,YAAY,GAAG,CACjB;AACA;AAFiB,CAArB;AAKA,MAAMC,UAAU,GAAG,CAACT,KAAD,CAAnB;AAEA,MAAMU,KAAK,GAAGb,WAAW,CAACS,OAAD,EAAUE,YAAV,EAAwBG,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAA/D,CAAzB;AAEA,eAAeF,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {listResultReducer, productDetailsReducer} from './reducers/searchReducers'\nimport { cartReducer } from './reducers/cartReducer'\nimport { userLoginReducer } from './reducers/userReducers'\n\nconst reducer = combineReducers({\n    listResult: listResultReducer,\n    //productDetails: productDetailsReducer,\n    //cart: cartReducer,\n    //userLogin: userLoginReducer,\n})\n\n//const cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse (localStorage.getItem('cartItems')) : []\n\n//const userInfoFromStorage = localStorage.getItem('userInfo') \n//? JSON.parse (localStorage.getItem('userInfo')) \n//: null\n\nconst initialState = {\n    //cart: { cartItems: cartItemsFromStorage },\n    //userLogin: { userInfo: userInfoFromStorage } \n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport default store"]},"metadata":{},"sourceType":"module"}